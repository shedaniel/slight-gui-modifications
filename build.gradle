plugins {
    id 'dev.architectury.loom' version '1.3.355'
    id 'maven-publish'
}

apply plugin: 'groovy'

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/slight-gui-modifications.aw")
}

sourceSets {
    main {
        groovy { srcDirs += ['src/main/groovy'] }
    }
}

repositories {
    maven {
        url "https://jitpack.io"

        content {
            includeGroup "com.github.Chocohead"
        }
    }
    maven { url "https://maven.shedaniel.me" }
    maven { url "https://ueaj.dev/maven" }
    maven { url "https://maven.terraformersmc.com/releases" }
    mavenCentral()
}

dependencies {
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings(loom.officialMojangMappings())
    optionally("net.fabricmc:fabric-loader:${project.loader_version}")

    modApi("net.fabricmc.fabric-api:fabric-api:${project.api_version}") {
        exclude(module: "fabric-biomes-v1")
    }
    depend("com.github.Chocohead:Fabric-ASM:${project.fabric_asm_version}")
    optionally("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}")
    optionally("com.terraformersmc:modmenu:${project.modmenu_version}")
    optionally("dev.architectury:architectury-fabric:${project.architectury_version}")
    optionally("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config}")
    depend("net.devtech:arrp:${project.arrp_version}")
    depend("org.codehaus.groovy:groovy-jsr223:3.0.11")
    depend("org.codehaus.groovy:groovy:3.0.11")
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
}

def depend(str) {
    dependencies.modApi(str) {
        exclude(group: "net.fabricmc")
        exclude(group: "net.fabricmc.fabric-api")
        exclude(group: "io.github.prospector")
        exclude(module: "config-2")
    }
    dependencies.include(str) {
        exclude(group: "net.fabricmc")
        exclude(group: "net.fabricmc.fabric-api")
        exclude(group: "io.github.prospector")
        exclude(module: "config-2")
    }
}

def optionally(str) {
    runtime(str)
    dependencies.modCompileOnly(str) {
        exclude(group: "net.fabricmc")
        exclude(group: "net.fabricmc.fabric-api")
        exclude(group: "io.github.prospector")
        exclude(module: "config-2")
    }
}

def runtime(str) {
    dependencies.modLocalRuntime(str) {
        exclude(group: "net.fabricmc")
        exclude(group: "net.fabricmc.fabric-api")
        exclude(group: "io.github.prospector")
        exclude(module: "config-2")
    }
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
    inputs.property "version", project.version
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 16
}

jar {
    from "LICENSE"
}
